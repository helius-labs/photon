openapi: 3.0.3
info:
  title: photon-indexer
  description: Solana indexer for general compression
  license:
    name: Apache-2.0
  version: 0.5.0
servers:
- url: http://127.0.0.1
paths:
  /:
    summary: getCompressedBalance
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - jsonrpc
              - id
              - method
              - params
              properties:
                id:
                  type: string
                  description: An ID to identify the request.
                  enum:
                  - test-account
                jsonrpc:
                  type: string
                  description: The version of the JSON-RPC protocol.
                  enum:
                  - '2.0'
                method:
                  type: string
                  description: The name of the method to invoke.
                  enum:
                  - getCompressedBalance
                params:
                  type: object
                  description: Request for compressed account data
                  default:
                    address: null
                    hash: '11111111111111111111111111111111'
                  properties:
                    address:
                      allOf:
                      - $ref: '#/components/schemas/SerializablePubkey'
                      nullable: true
                    hash:
                      allOf:
                      - $ref: '#/components/schemas/Hash'
                      nullable: true
                  additionalProperties: false
                  example:
                    address: null
                    hash: '11111111111111111111111111111111'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                description: Response for compressed account balance
                default:
                  context:
                    slot: 1
                  value: 1
                required:
                - context
                - value
                properties:
                  context:
                    $ref: '#/components/schemas/Context'
                  value:
                    type: integer
                    format: int64
                    minimum: 0
                example:
                  context:
                    slot: 1
                  value: 1
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Request was forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '429':
          description: Exceeded rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Account:
      type: object
      required:
      - hash
      - discriminator
      - data
      - owner
      - lamports
      - slotUpdated
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/SerializablePubkey'
          nullable: true
        data:
          type: string
        discriminator:
          type: integer
          format: int64
          minimum: 0
        hash:
          $ref: '#/components/schemas/Hash'
        lamports:
          type: integer
          format: int64
          minimum: 0
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
        seq:
          type: integer
          format: int64
          nullable: true
          minimum: 0
        slotUpdated:
          type: integer
          format: int64
          minimum: 0
        tree:
          allOf:
          - $ref: '#/components/schemas/SerializablePubkey'
          nullable: true
      additionalProperties: false
    AccountList:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      additionalProperties: false
    Context:
      type: object
      required:
      - slot
      properties:
        slot:
          type: integer
          description: The current slot
          default: 1
          example: 1
    Hash:
      type: string
      description: A 32-byte hash represented as a base58 string.
      example: 11111117SQekjmcMtR25wEPPiL6m1Mb5586NkLL4X
    Limit:
      type: integer
      format: int64
      minimum: 0
    MerkleProofWithContext:
      type: object
      required:
      - proof
      - leafIndex
      - hash
      - merkleTree
      properties:
        hash:
          $ref: '#/components/schemas/Hash'
        leafIndex:
          type: integer
          format: int32
          minimum: 0
        merkleTree:
          $ref: '#/components/schemas/SerializablePubkey'
        proof:
          type: array
          items:
            $ref: '#/components/schemas/Hash'
      additionalProperties: false
    PaginatedAccountList:
      type: object
      required:
      - items
      properties:
        cursor:
          allOf:
          - $ref: '#/components/schemas/Hash'
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      additionalProperties: false
    SerializablePubkey:
      type: string
      description: A Solana public key represented as a base58 string.
      default: 11111117353mdUKehx9GW6JNHznGt5oSZs9fWkVkB
      example: 11111117353mdUKehx9GW6JNHznGt5oSZs9fWkVkB
    TokenAcccount:
      type: object
      required:
      - hash
      - owner
      - mint
      - amount
      - isNative
      - frozen
      - data
      - discriminator
      - lamports
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/SerializablePubkey'
          nullable: true
        amount:
          type: integer
          format: int64
          minimum: 0
        closeAuthority:
          allOf:
          - $ref: '#/components/schemas/SerializablePubkey'
          nullable: true
        data:
          type: string
          format: binary
        delegate:
          allOf:
          - $ref: '#/components/schemas/SerializablePubkey'
          nullable: true
        discriminator:
          type: integer
          format: int64
          minimum: 0
        frozen:
          type: boolean
        hash:
          $ref: '#/components/schemas/Hash'
        isNative:
          type: boolean
        lamports:
          type: integer
          format: int64
          minimum: 0
        mint:
          $ref: '#/components/schemas/SerializablePubkey'
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
        seq:
          type: integer
          format: int64
          nullable: true
          minimum: 0
        tree:
          allOf:
          - $ref: '#/components/schemas/SerializablePubkey'
          nullable: true
      additionalProperties: false
    TokenAccountBalance:
      type: object
      required:
      - amount
      properties:
        amount:
          type: string
      additionalProperties: false
    TokenAccountList:
      type: object
      required:
      - items
      properties:
        cursor:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/TokenAcccount'
