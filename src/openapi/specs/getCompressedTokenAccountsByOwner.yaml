openapi: 3.0.3
info:
  title: photon-indexer
  description: Solana indexer for general compression
  license:
    name: Apache-2.0
  version: 0.9.0
servers:
- url: http://127.0.0.1
paths:
  /:
    summary: getCompressedTokenAccountsByOwner
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - jsonrpc
              - id
              - method
              - params
              properties:
                id:
                  type: string
                  description: An ID to identify the request.
                  enum:
                  - test-account
                jsonrpc:
                  type: string
                  description: The version of the JSON-RPC protocol.
                  enum:
                  - '2.0'
                method:
                  type: string
                  description: The name of the method to invoke.
                  enum:
                  - getCompressedTokenAccountsByOwner
                params:
                  type: object
                  required:
                  - owner
                  properties:
                    cursor:
                      allOf:
                      - $ref: '#/components/schemas/Base58String'
                      nullable: true
                    limit:
                      allOf:
                      - $ref: '#/components/schemas/Limit'
                      nullable: true
                    mint:
                      allOf:
                      - $ref: '#/components/schemas/SerializablePubkey'
                      nullable: true
                    owner:
                      $ref: '#/components/schemas/SerializablePubkey'
                  additionalProperties: false
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                required:
                - context
                - value
                properties:
                  context:
                    $ref: '#/components/schemas/Context'
                  value:
                    $ref: '#/components/schemas/TokenAccountList'
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Request was forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '429':
          description: Exceeded rate limit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Account:
      type: object
      required:
      - hash
      - discriminator
      - owner
      - lamports
      - tree
      - leafIndex
      - slotUpdated
      properties:
        address:
          $ref: '#/components/schemas/SerializablePubkey'
        data:
          $ref: '#/components/schemas/Base64String'
        dataHash:
          $ref: '#/components/schemas/Hash'
        discriminator:
          type: integer
          format: int64
          minimum: 0
        hash:
          $ref: '#/components/schemas/Hash'
        lamports:
          type: integer
          format: int64
          minimum: 0
        leafIndex:
          type: integer
          format: int32
          minimum: 0
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
        seq:
          type: integer
          format: int64
          nullable: true
          minimum: 0
        slotUpdated:
          type: integer
          format: int64
          minimum: 0
        tree:
          $ref: '#/components/schemas/SerializablePubkey'
      additionalProperties: false
    AccountList:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      additionalProperties: false
    Base58String:
      type: string
      description: A base 58 encoded string.
      default: 3J98t1WpEZ73CNm
      example: 3J98t1WpEZ73CNm
    Base64String:
      type: string
      description: A base 64 encoded string.
      default: SGVsbG8sIFdvcmxkIQ==
      example: SGVsbG8sIFdvcmxkIQ==
    Context:
      type: object
      required:
      - slot
      properties:
        slot:
          type: integer
          description: The current slot
          default: 1
          example: 1
    Hash:
      type: string
      description: A 32-byte hash represented as a base58 string.
      example: 111111152P2r5yt6odmBLPsFCLBrFisJ3aS7LqLAT
    Limit:
      type: integer
      format: int64
      minimum: 0
    MerkleProofWithContext:
      type: object
      required:
      - proof
      - leafIndex
      - hash
      - merkleTree
      properties:
        hash:
          $ref: '#/components/schemas/Hash'
        leafIndex:
          type: integer
          format: int32
          minimum: 0
        merkleTree:
          $ref: '#/components/schemas/SerializablePubkey'
        proof:
          type: array
          items:
            $ref: '#/components/schemas/Hash'
      additionalProperties: false
    PaginatedAccountList:
      type: object
      required:
      - items
      properties:
        cursor:
          $ref: '#/components/schemas/Hash'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      additionalProperties: false
    PaginatedSignatureInfoList:
      type: object
      required:
      - items
      properties:
        cursor:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/SignatureInfo'
    SerializablePubkey:
      type: string
      description: A Solana public key represented as a base58 string.
      default: 11111114d3RrygbPdAtMuFnDmzsN8T5fYKVQ7FVr7
      example: 11111114d3RrygbPdAtMuFnDmzsN8T5fYKVQ7FVr7
    SerializableSignature:
      type: string
      description: A Solana transaction signature.
      default: 5J8H5sTvEhnGcB4R8K1n7mfoiWUD9RzPVGES7e3WxC7c
      example: 5J8H5sTvEhnGcB4R8K1n7mfoiWUD9RzPVGES7e3WxC7c
    SignatureInfo:
      type: object
      required:
      - signature
      - slot
      - blockTime
      properties:
        blockTime:
          type: string
          format: date-time
        signature:
          $ref: '#/components/schemas/SerializableSignature'
        slot:
          type: integer
          format: int64
          minimum: 0
    SignatureInfoList:
      type: object
      required:
      - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SignatureInfo'
    TokenAcccount:
      type: object
      required:
      - hash
      - owner
      - mint
      - amount
      - delegatedAmount
      - isNative
      - frozen
      - data
      - discriminator
      - lamports
      - leafIndex
      - slotUpdated
      properties:
        amount:
          type: integer
          format: int64
          minimum: 0
        data:
          $ref: '#/components/schemas/Base64String'
        dataHash:
          $ref: '#/components/schemas/Hash'
        delegate:
          $ref: '#/components/schemas/SerializablePubkey'
        delegatedAmount:
          type: integer
          format: int64
          minimum: 0
        discriminator:
          type: integer
          format: int64
          minimum: 0
        frozen:
          type: boolean
        hash:
          $ref: '#/components/schemas/Hash'
        isNative:
          type: boolean
        lamports:
          type: integer
          format: int64
          minimum: 0
        leafIndex:
          type: integer
          format: int32
          minimum: 0
        mint:
          $ref: '#/components/schemas/SerializablePubkey'
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
        seq:
          type: integer
          format: int64
          nullable: true
          minimum: 0
        slotUpdated:
          type: integer
          format: int64
          minimum: 0
        tree:
          $ref: '#/components/schemas/SerializablePubkey'
      additionalProperties: false
    TokenAccountBalance:
      type: object
      required:
      - amount
      properties:
        amount:
          type: integer
          format: int64
          minimum: 0
      additionalProperties: false
    TokenAccountList:
      type: object
      required:
      - items
      properties:
        cursor:
          $ref: '#/components/schemas/Base58String'
        items:
          type: array
          items:
            $ref: '#/components/schemas/TokenAcccount'
