openapi: 3.0.3
info:
  title: photon-indexer
  description: Solana indexer for general compression
  license:
    name: Apache-2.0
  version: 0.38.0
servers:
- url: https://devnet.helius-rpc.com?api-key=<api_key>
paths:
  /:
    summary: getTransactionWithCompressionInfo
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - jsonrpc
              - id
              - method
              - params
              properties:
                id:
                  type: string
                  description: An ID to identify the request.
                  enum:
                  - test-account
                jsonrpc:
                  type: string
                  description: The version of the JSON-RPC protocol.
                  enum:
                  - '2.0'
                method:
                  type: string
                  description: The name of the method to invoke.
                  enum:
                  - getTransactionWithCompressionInfo
                params:
                  type: object
                  required:
                  - signature
                  properties:
                    signature:
                      $ref: '#/components/schemas/SerializableSignature'
                  additionalProperties: false
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                description: A Solana transaction with additional compression information
                properties:
                  compression_info:
                    type: object
                    required:
                    - closedAccounts
                    - openedAccounts
                    properties:
                      closedAccounts:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountWithOptionalTokenData'
                      openedAccounts:
                        type: array
                        items:
                          $ref: '#/components/schemas/AccountWithOptionalTokenData'
                    additionalProperties: false
                  transaction:
                    type: object
                    description: An encoded confirmed transaction with status meta
components:
  schemas:
    Account:
      type: object
      required:
      - hash
      - owner
      - lamports
      - tree
      - leafIndex
      - seq
      - slotCreated
      properties:
        address:
          $ref: '#/components/schemas/SerializablePubkey'
        data:
          $ref: '#/components/schemas/AccountData'
        hash:
          $ref: '#/components/schemas/Hash'
        lamports:
          $ref: '#/components/schemas/UnsignedInteger'
        leafIndex:
          $ref: '#/components/schemas/UnsignedInteger'
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
        seq:
          $ref: '#/components/schemas/UnsignedInteger'
        slotCreated:
          $ref: '#/components/schemas/UnsignedInteger'
        tree:
          $ref: '#/components/schemas/SerializablePubkey'
      additionalProperties: false
    AccountData:
      type: object
      required:
      - discriminator
      - data
      - dataHash
      properties:
        data:
          $ref: '#/components/schemas/Base64String'
        dataHash:
          $ref: '#/components/schemas/Hash'
        discriminator:
          $ref: '#/components/schemas/UnsignedInteger'
      additionalProperties: false
    AccountState:
      type: string
      enum:
      - initialized
      - frozen
    AccountWithOptionalTokenData:
      type: object
      required:
      - account
      properties:
        account:
          $ref: '#/components/schemas/Account'
        optionalTokenData:
          $ref: '#/components/schemas/TokenData'
      additionalProperties: false
    Base64String:
      type: string
      description: A base 64 encoded string.
      default: SGVsbG8sIFdvcmxkIQ==
      example: SGVsbG8sIFdvcmxkIQ==
    Hash:
      type: string
      description: A 32-byte hash represented as a base58 string.
      example: 1111111D596YFweJQuHY1BbjazZYmAbt8jJL2VzVM
    SerializablePubkey:
      type: string
      description: A Solana public key represented as a base58 string.
      default: 1111111CfoVZ9eMbESQia3WiAfF4dtpFdUMcnvAB1
      example: 1111111CfoVZ9eMbESQia3WiAfF4dtpFdUMcnvAB1
    SerializableSignature:
      type: string
      description: A Solana transaction signature.
      default: 5J8H5sTvEhnGcB4R8K1n7mfoiWUD9RzPVGES7e3WxC7c
      example: 5J8H5sTvEhnGcB4R8K1n7mfoiWUD9RzPVGES7e3WxC7c
    TokenData:
      type: object
      required:
      - mint
      - owner
      - amount
      - state
      properties:
        amount:
          $ref: '#/components/schemas/UnsignedInteger'
        delegate:
          $ref: '#/components/schemas/SerializablePubkey'
        mint:
          $ref: '#/components/schemas/SerializablePubkey'
        owner:
          $ref: '#/components/schemas/SerializablePubkey'
        state:
          $ref: '#/components/schemas/AccountState'
        tlv:
          $ref: '#/components/schemas/Base64String'
    UnsignedInteger:
      type: integer
      default: 100
      example: 100
